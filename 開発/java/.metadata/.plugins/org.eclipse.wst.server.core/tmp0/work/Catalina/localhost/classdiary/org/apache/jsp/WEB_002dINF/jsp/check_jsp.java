/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.51
 * Generated at: 2018-12-17 03:37:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import diary.beans.LoginInfoBeans;
import diary.sanitizing.Sanitizing;

public final class check_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("diary.beans.LoginInfoBeans");
    _jspx_imports_classes.add("diary.sanitizing.Sanitizing");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"\n");
      out.write("integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/main.css\">\n");
      out.write("<title>登録確認画面</title>\n");
      out.write("</head>\n");
      out.write("<body class=\"background\">\n");
      out.write("   ");
LoginInfoBeans loginInfo = (LoginInfoBeans)session.getAttribute("loginInfo");
      out.write("\n");
      out.write("   ");
String errorComment = (String)request.getAttribute("errorComment"); 
      out.write("\n");
      out.write("   ");
String insertDate = (String)session.getAttribute("insertDate"); 
      out.write("\n");
      out.write("   ");
String goodPoint = (String)session.getAttribute("goodPoint"); 
      out.write("\n");
      out.write("   ");
String badPoint = (String)session.getAttribute("badPoint"); 
      out.write("\n");
      out.write("   ");
String stComment = (String)session.getAttribute("stComment"); 
      out.write("\n");
      out.write("\n");
      out.write("   <h2 class=\"check\">日誌確認画面</h2>\n");
      out.write("       <table>\n");
      out.write("       \t<tr>\n");
      out.write("           <td class=\"registration\">");
      out.print(insertDate);
      out.write("</td>\n");
      out.write("           <td class=\"loginInfo\">");
      out.print(loginInfo.getCourseName());
      out.write("</td>\n");
      out.write("           <td class=\"loginInfo\">");
      out.print(loginInfo.getClassName());
      out.write("クラス</td>\n");
      out.write("           <td class=\"loginInfo\">氏名 : ");
      out.print(loginInfo.getName());
      out.write("</td>\n");
      out.write("       \t</tr>\n");
      out.write("       </table>\n");
      out.write("\t      <p id=\"goodPoint\">良かった点</p>\n");
      out.write("\t      <p>");
      out.print(Sanitizing.scriptStop(goodPoint));
      out.write("</p>\n");
      out.write("\t      <p id=\"badPoint\">悪かった点</p>\n");
      out.write("\t      <p>");
      out.print(Sanitizing.scriptStop(badPoint));
      out.write("</p>\n");
      out.write("\t      <p id=\"studentComment\">学生コメント</p>\n");
      out.write("\t      <p>");
      out.print(Sanitizing.scriptStop(stComment));
      out.write("</p>\n");
      out.write("            <p id=\"check\">この内容でよろしいですか？</p>\n");
      out.write("\t<form action=\"checkcomp\" method=\"GET\">\n");
      out.write("\t<div class=\"form-group\">\n");
      out.write("\t<input id=\"yes\" class=\"btn btn-warning btn-lg btn-block\"\n");
      out.write("\t type=\"submit\" value=\"はい\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</form>\n");
      out.write("\t<form action=\"registration\" method=\"GET\">\n");
      out.write("\t<div class=\"form-group\">\n");
      out.write("\t\t<input id=\"no\" class=\"btn btn-warning btn-lg btn-block\"\n");
      out.write("\t\ttype=\"submit\" value=\"いいえ\">\n");
      out.write("\t</div>\n");
      out.write("\t</form>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n");
      out.write("\t\tintegrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n");
      out.write("\t\tintegrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n");
      out.write("\t\tintegrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\"\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
